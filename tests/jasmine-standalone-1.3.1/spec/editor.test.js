// Generated by CoffeeScript 1.6.2
(function() {
  describe("Graph Editor", function() {
    it("Exists", function() {
      return expect(ged).toBeDefined;
    });
    it("Can create an instance of graph", function() {
      return expect(digraph.create()).toBeDefined;
    });
    return describe("When works with nodes", function() {
      var g;

      g = digraph.create();
      it("Can add node 1", function() {
        return expect(ged.nodes.add(g)).toBe(0);
      });
      it("Can add node 2", function() {
        return expect(ged.nodes.add(g)).toBe(1);
      });
      it("Has 2 nodes", function() {
        return expect(g.nodes.length).toBe(2);
      });
      it("Executes Undo", function() {
        return expect(ged.undo()).toBe(true);
      });
      it("Has 1 nodes", function() {
        return expect(g.nodes.length).toBe(1);
      });
      it("Executes Redo", function() {
        return expect(ged.redo()).toBe(true);
      });
      it("Has 2 nodes", function() {
        return expect(g.nodes.length).toBe(2);
      });
      it("Executes Undo", function() {
        return expect(ged.undo()).toBe(true);
      });
      it("Has 1 nodes", function() {
        return expect(g.nodes.length).toBe(1);
      });
      it("Executes Redo", function() {
        return expect(ged.redo()).toBe(true);
      });
      it("Has 2 nodes", function() {
        return expect(g.nodes.length).toBe(2);
      });
      it("Executes Redo - fails", function() {
        return expect(ged.redo()).toBe(false);
      });
      it("Has 2 nodes", function() {
        return expect(g.nodes.length).toBe(2);
      });
      it("2 times Undo - no fail", function() {
        expect(ged.undo()).toBe(true);
        return expect(ged.undo()).toBe(true);
      });
      return it("3d time Undo - fails", function() {
        return expect(ged.undo()).toBe(false);
      });
    });
  });

}).call(this);
