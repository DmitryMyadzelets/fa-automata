// Generated by CoffeeScript 1.6.2
(function() {
  describe("Basic sets (binary)", function() {
    it("Module 'jA' is defined", function() {
      return expect(jA).toBeDefined();
    });
    return describe("Binary arrays", function() {
      var A, B;

      A = jA.binary_set();
      B = jA.binary_set();
      it("Create two binary sets 'A' and 'B'", function() {
        expect(A).toBeDefined();
        return expect(B).toBeDefined();
      });
      it("Add 20 elements to set 'A'", function() {
        A.add(20);
        return expect(A.cardinality).toBe(20);
      });
      it("Add 1 elements to set 'A' with value 'true'", function() {
        A.add(1, true);
        return expect(A.get(20)).toBe(true);
      });
      it("Set 5th element of 'A' with value 'true'", function() {
        A.set(5, true);
        return expect(A.get(5)).toBe(true);
      });
      it("Elements with index other then 5 and 20 are 'false'", function() {
        var n, _results;

        n = A.cardinality;
        _results = [];
        while (n--) {
          switch (n) {
            case 5:
            case 20:
              _results.push(expect(A.get(n)).toBe(true));
              break;
            default:
              _results.push(expect(A.get(n)).toBe(false));
          }
        }
        return _results;
      });
      it("Set 'B' has no elements", function() {
        return expect(B.cardinality).toBe(0);
      });
      return it("Set 'A' has 6 elements when 15 are deleted", function() {
        A.add(-15);
        expect(A.cardinality).toBe(6);
        expect(A.get(5)).toBe(true);
        return expect(A.get(4)).toBe(false);
      });
    });
  });

}).call(this);
